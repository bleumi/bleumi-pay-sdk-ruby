=begin
#Bleumi Pay API

#A simple and powerful REST API to integrate ERC-20, Ethereum, xDai payments and/or payouts into your business or application

The version of the OpenAPI document: 1.0.0
Contact: info@bleumi.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.2

=end

require 'spec_helper'
require 'json'

# Unit tests for BleumiPay::PayoutsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PayoutsApi' do
  before do
    # run before each test
    @api_instance = BleumiPay::PayoutsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PayoutsApi' do
    it 'should create an instance of PayoutsApi' do
      expect(@api_instance).to be_instance_of(BleumiPay::PayoutsApi)
    end
  end

  # unit tests for create_payout
  # Create a payout.
  # @param create_payout_request Request body - used to specify payout creation parameters.
  # @param [Hash] opts the optional parameters
  # @option opts [Chain] :chain Ethereum network in which payment is to be created. Please refer documentation for Supported Networks
  # @return [CreatePayoutResponse]
  describe 'create_payout test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_payouts
  # Returns a list of payouts
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_token Cursor to start results from
  # @option opts [String] :sort_by Sort payments by
  # @option opts [String] :start_at Get payouts from this timestamp (unix)
  # @option opts [String] :end_at Get payouts till this timestamp (unix)
  # @return [PaginatedPayoutItems]
  describe 'list_payouts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
